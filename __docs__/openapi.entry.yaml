openapi: 3.0.0
info:
  title: Entry API
  version: 1.0.0
  description: API for managing user entries and their statistics

paths:
  /entries:
    get:
      summary: Get all entries for the authenticated user
      security:
        - BearerAuth: []
      responses:
        '200':
          description: A list of entries for the user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Entry'
        '401':
          description: Unauthorized
    post:
      summary: Create a new entry
      description: User provides the text, and the server generates paragraphs, statistics, and other fields.
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EntryInput'
      responses:
        '201':
          description: Entry created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entry'
        '400':
          description: Bad request
        '401':
          description: Unauthorized

  /entries/{id}:
    get:
      summary: Get an entry by ID
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: The requested entry
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Entry'
        '401':
          description: Unauthorized
        '404':
          description: Entry not found

components:
  schemas:
    EntryInput:
      type: object
      properties:
        text:
          type: string
          description: The full text provided by the user. The server will process this to generate paragraphs and statistics.
      required:
        - text

    Entry:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        statistics:
          $ref: '#/components/schemas/Statistics'
        paragraphs:
          type: array
          items:
            type: string
          description: Generated from the input text by the server
      required:
        - userId
        - paragraphs

    Statistics:
      type: object
      properties:
        id:
          type: string
        message:
          type: string
        summary:
          type: string
        size:
          type: string
        total:
          type: object
          properties:
            paragraphs:
              type: number
            lines:
              type: number
            specials:
              type: number
            sentences:
              type: number
            averageWordsPerSentence:
              type: number
          required:
            - paragraphs
            - lines
            - specials
            - sentences
            - averageWordsPerSentence
        paragraphs:
          type: array
          items:
            type: object
            properties:
              uuid:
                type: string
              words:
                type: number
              lines:
                type: number
              sentences:
                type: number
              averages:
                type: object
                properties:
                  wordsPerSentence:
                    type: number
                required:
                  - wordsPerSentence
              duplicatedSentences:
                type: array
                items:
                  type: object
                  properties:
                    value:
                      type: number
                    raw:
                      type: string
                  required:
                    - value
                    - raw
              mostWordsperParagraph:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    value:
                      type: number
                  required:
                    - name
                    - value
              mostLinkingWordsperParagraph:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                    value:
                      type: number
                  required:
                    - name
                    - value
            required:
              - uuid
              - words
              - lines
              - sentences
              - averages
              - duplicatedSentences
              - mostWordsperParagraph
              - mostLinkingWordsperParagraph
      required:
        - message
        - summary
        - size
        - total
        - paragraphs

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer